spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp

#### CẤU HÌNH CONNET GMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=navttps24678@fpt.edu.vn
spring.mail.password=yjnbnrwrpolmplrp
spring.mail.properties.mail.smpt.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true 
#######################################################################

####CẤU HÌNH CONNECT SQL SERVER
#  Connection url for the database
spring.datasource.driverClassName =  com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url = jdbc:sqlserver://localhost:1433;databaseName=EyeWearShop;encrypt=true;trustServerCertificate=true

# SQLSERVER username and password
spring.datasource.username = sa
spring.datasource.password = 123

# Keep the connection alive if idle for along time (needed in production)
spring.datasource.dbcp2.test-while-idle = true
spring.datasource.dbcp2.validation-query = SELECT 1

# ===================
# JPA / HIBERNATE
# ===================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is )
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create,create-drop,update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = validate
# create, create-drop, update, validate, none

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect

